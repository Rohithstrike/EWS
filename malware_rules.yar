rule HighRiskRansomware {
    meta:
        severity = "critical"
        description = "Detection of high-risk ransomware, including advanced persistent threats (APTs) leveraging encryption techniques and anti-analysis tactics"
        threat_type = "ransomware"
        author = "Enhanced by AI"
        date = "2024-10-28"

    strings:
        // Common ransomware file extensions
        $ransom_ext = /(\.locked|\.crypt|\.ransom|\.enc|\.encfile|\.pay|\.paycrypt|\.locky|\.jjf|\.jjg|\.xyz)$/
        // Known ransom messages
        $ransom_note = /Your files have been encrypted|All your data is locked|Decryptor will cost|ransomware notice|Pay the ransom to get your files back|Your documents are unsafe|Contact us at/
        // Encryption algorithm references commonly used by ransomware
        $encryption_calls = /AES|RSA|DES|Blowfish|ChaCha20|Twofish|XTEA|Serpent/
        // HTTP and HTTPS encoded indicators for command-and-control
        $encoded_c2_http = {68 74 74 70 3A 2F 2F}
        $encoded_c2_https = {68 74 74 70 73 3A 2F 2F}
        // Process obfuscation commands
        $obfuscated_cmd = "cmd.exe /c start"
        // Disabling recovery mechanisms
        $shutdown_cmd = /shutdown(.*)\/f|bcdedit\/set|powercfg -h off|taskkill \/F \/IM|del \/F \/S \/Q/
        $shadow_delete = "vssadmin delete shadows /all /quiet"
        // Persistence in Windows registry
        $reg_persistence = "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run|HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run"
        // Anti-analysis tactics often observed in high-risk ransomware
        $anti_analysis = /sleep\((\d+|.*)\)|sandbox|debugger|GetModuleHandleA|IsDebuggerPresent|CheckRemoteDebuggerPresent/

    condition:
        ($ransom_ext or $ransom_note or $shadow_delete) and
        ($encoded_c2_http or $encoded_c2_https or $reg_persistence or $obfuscated_cmd or $encryption_calls or $shutdown_cmd or $anti_analysis)
}

rule ZeroDayExploit {
    meta:
        severity = "high"
        description = "Detection of zero-day exploit attempts with buffer overflow, shellcode, privilege escalation, and common CVE exploit patterns"
        threat_type = "zero_day_exploit"
        author = "Enhanced by AI"
        date = "2024-10-28"

    strings:
        // NOP sled pattern in buffer overflow attacks
        $overflow_pattern = /(\x90{10,})/
        // Common shellcode for spawning a shell
        $shellcode = {31 c0 50 68 2f 2f 73 68 68 2f 62 69 6e 89 e3|6a 0b 58 99 52 57 68 2f 2f 73 68 68 2f 62 69 6e 89 e3}
        // Known privilege escalation techniques
        $priv_escalation = /seDebugPrivilege|seTakeOwnershipPrivilege|seBackupPrivilege|seRestorePrivilege|createProcessWithLogonW|CreateRemoteThread|AdjustTokenPrivileges/
        // Command injection patterns
        $cmd_injection = /&&|\|\||;|\$\(.*\)|\`.*\`|;|\/c|\/k|\/p/
        // Base64-encoded payloads
        $encoded_payload = /([a-zA-Z0-9\+\/=]{20,})/
        // Recently disclosed CVEs and exploit patterns for identification
        $known_cves = /CVE\-(2023|2024)\-\d{4,5}|MS[0-9]{4}-[0-9]{3}|CVE\-\d{4}\-\d{4}/
        // Patterns often found in malware-based memory dumps or stack manipulation
        $memory_corruption = /mov eax, esp|jmp esp|xor eax, eax|xor ecx, ecx|call eax|pop eax|push eax|inc eax|dec eax/

    condition:
        any of ($overflow_pattern, $shellcode, $priv_escalation, $cmd_injection, $encoded_payload, $known_cves, $memory_corruption)
}

rule MediumRiskMalware {
    meta:
        severity = "medium"
        description = "Detection of medium-risk malware showing suspicious behavior, including fileless techniques and command-and-control"
        threat_type = "generic_malware"
        author = "Enhanced by AI"
        date = "2024-10-28"

    strings:
        // Indicators for common malicious payloads and fileless malware
        $malicious_string = "malicious_payload|hidden_execute"
        $fileless_powershell = /powershell.exe -WindowStyle hidden -EncodedCommand|powershell -nop -c/
        // Obfuscated or uncommon file extensions
        $suspicious_file_ext = {2E 74 78 74|2E 6D 73 67} // Obfuscated .txt and .msg
        // Command line download from external sources
        $remote_script = /wget|curl http(s)?:\/\/\S+|Invoke-WebRequest/
        // Known malicious or phishing URLs
        $suspicious_url = /http(s)?:\/\/(malicious|phish)\.[a-z0-9\-]+\.(com|net|org|io|biz)/
        // Indications of encryption or obfuscation attempts
        $file_encrypt_attempt = /CryptographicBuffer|EncryptData|CryptEncrypt|CryptDecrypt|SecureString/
        // Windows-specific persistence techniques
        $win_registry_run = "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run|HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run"

    condition:
        any of ($malicious_string, $fileless_powershell, $suspicious_file_ext, $remote_script, $suspicious_url, $file_encrypt_attempt, $win_registry_run)
}

rule LowRiskInfoGathering {
    meta:
        severity = "low"
        description = "Detection of low-risk malware or info-gathering techniques, including basic network commands and debug artifacts"
        threat_type = "info_gathering"
        author = "Enhanced by AI"
        date = "2024-10-28"

    strings:
        // Known low-risk malware patterns for testing purposes
        $low_risk_string = "low_risk_malware_pattern|info_gathering_tool"
        // Basic info-gathering commands
        $info_cmd = /whoami|hostname|ipconfig|ifconfig|netstat|net user|arp|route print|tracert/
        // Unusual or temporary file extensions
        $suspicious_extension = /\.(tmp|bak|swp|log|old|ini)$/
        // Debug artifacts or variables used in development
        $suspicious_var = /[A-Za-z0-9]+_debug|debugger|tempVar/
        // Common network scanning or probing commands
        $network_scan = /ping|nslookup|tracert|net view|arp -a|route|curl/

    condition:
        any of ($low_risk_string, $info_cmd, $suspicious_extension, $suspicious_var, $network_scan)
}
