rule HighRiskRansomware {
    meta:
        severity = "critical"
        description = "Detection of high-risk ransomware, including APTs using advanced encryption and anti-analysis techniques"
        threat_type = "ransomware"
        author = "Enhanced by AI"
        date = "2024-10-31"
        last_modified = "2024-11-01"

    strings:
        // File extensions commonly associated with ransomware
        $ransom_ext = /(\.locked|\.crypt|\.ransom|\.enc|\.encfile|\.pay|\.paycrypt|\.locky|\.jjf|\.jjg|\.xyz)$/
        // Common ransom note phrases
        $ransom_note = /Your files have been encrypted|All your data is locked|Decryptor will cost|ransomware notice|Pay the ransom to get your files back|Contact us at|This is not a scam|Your documents are unsafe/
        // Encryption algorithms and function calls
        $encryption_calls = /AES|RSA|DES|Blowfish|ChaCha20|Twofish|XTEA|Serpent|Encrypt|Decrypt/
        // Patterns indicating communication with malicious C2 servers
        $encoded_c2_http = {68 74 74 70 3A 2F 2F}
        $encoded_c2_https = {68 74 74 70 73 3A 2F 2F}
        // Command execution patterns
        $obfuscated_cmd = "cmd.exe /c start"
        // Malicious shutdown or file deletion commands
        $shutdown_cmd = /shutdown(.*)\/f|bcdedit\/set|powercfg -h off|taskkill \/F \/IM|del \/F \/S \/Q|format c:\/q/
        $shadow_delete = "vssadmin delete shadows /all /quiet|vssadmin delete shadows /for=d: /all|wmic shadowcopy delete"
        // Registry persistence techniques
        $reg_persistence = /HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run|HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run|HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce/
        // Anti-analysis and debugging checks
        $anti_analysis = /sleep\((\d+|.*)\)|sandbox|debugger|GetModuleHandleA|IsDebuggerPresent|CheckRemoteDebuggerPresent|NtQueryInformationProcess/
        $anti_debug = /int 3|__debugbreak|GetTickCount|QueryPerformanceCounter|SetUnhandledExceptionFilter|UnhandledExceptionFilter|IsDebuggerPresent|DebugActiveProcess/
        // Mutex creation patterns indicating potential malware behavior
        $mutex_creation = /CreateMutexA|CreateMutexW|Global\\[a-zA-Z0-9]{8,}/
        // Patterns for file wiping techniques
        $file_wipe = /cipher \/w|sdelete|del \*\.bak|del \*\.old|shred|wipe|rm -rf/
        // Process injection techniques
        $process_inject = /CreateRemoteThread|OpenProcess|VirtualAllocEx|WriteProcessMemory|CreateProcessA|CreateProcessW|SetWindowsHookEx/
        // Scripts for persistence and remote execution
        $persistence_scripts = /reg add HKLM|powershell -exec bypass|Invoke-WebRequest|New-Object Net.WebClient/
        // Indicators of malicious behavior in temp directories
        $malicious_behavior = /C:\Windows\Temp|C:\Users\\.*\\AppData\\Local\\Temp|C:\ProgramData\\.*\\|C:\Windows\System32/
        // Additional patterns for known ransomware strains
        $known_ransomware_strings = /LockBit|REvil|Maze|Sodinokibi|Dharma|GandCrab|Cryptowall/

    condition:
        ($ransom_ext or $ransom_note or $shadow_delete or $known_ransomware_strings) and
        ($encoded_c2_http or $encoded_c2_https or $reg_persistence or $obfuscated_cmd or $encryption_calls or $shutdown_cmd or $anti_analysis or $anti_debug or $mutex_creation or $file_wipe or $process_inject or $persistence_scripts or $malicious_behavior)
}

rule ZeroDayExploit {
    meta:
        severity = "high"
        description = "Detection of zero-day exploit attempts including buffer overflow, shellcode, privilege escalation, and CVE patterns"
        threat_type = "zero_day_exploit"
        author = "Enhanced by AI"
        date = "2024-10-31"
        last_modified = "2024-11-01"

    strings:
        // Buffer overflow and NOP sled patterns
        $overflow_pattern = /(\x90{10,})|(\x41\x41\x41\x41|\x42\x42\x42\x42)/
        // Common shellcode patterns
        $shellcode = {31 c0 50 68 2f 2f 73 68 68 2f 62 69 6e 89 e3|6a 0b 58 99 52 57 68 2f 2f 73 68 68 2f 62 69 6e 89 e3|cc cc cc cc}
        // Privilege escalation techniques
        $priv_escalation = /seDebugPrivilege|seTakeOwnershipPrivilege|seBackupPrivilege|seRestorePrivilege|createProcessWithLogonW|CreateRemoteThread|AdjustTokenPrivileges|TokenPrivileges/
        // Command injection patterns
        $cmd_injection = /&&|\|\||;|\$\(.*\)|\`.*\`|;|\/c|\/k|\/p|cmd\/c/
        // Base64 encoded payloads
        $encoded_payload = /([a-zA-Z0-9\+\/=]{20,})|base64\.decode/
        // Known CVEs and security vulnerabilities
        $known_cves = /CVE\-(2023|2024)\-\d{4,5}|MS[0-9]{4}-[0-9]{3}|CVE\-\d{4}\-\d{4}/
        // Memory corruption patterns
        $memory_corruption = /mov eax, esp|jmp esp|xor eax, eax|xor ecx, ecx|call eax|pop eax|push eax|inc eax|dec eax|lea eax, [esp+0x4]/
        // Exploitation API calls
        $api_exploit = /VirtualAllocEx|WriteProcessMemory|ZwMapViewOfSection|HeapAlloc|NtCreateThreadEx/
        // Generic exploit payload markers
        $exploit_payload = /malicious_payload|exploit_code|shell_spawn|execute_payload/
        // Sandbox detection techniques
        $sandbox_check = /sandbox|debugger|vmware|QEMU/
        // Additional patterns for exploit kits and frameworks
        $exploit_kit_patterns = /Angler|Neutrino|Rig|Magnitude|Goon/

    condition:
        any of ($overflow_pattern, $shellcode, $priv_escalation, $cmd_injection, $encoded_payload, $known_cves, $memory_corruption, $api_exploit, $exploit_payload, $sandbox_check, $exploit_kit_patterns)
}

